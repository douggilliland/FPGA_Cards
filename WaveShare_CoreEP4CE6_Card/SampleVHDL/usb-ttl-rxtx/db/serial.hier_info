|serial
clk => clkbaud8x.CLK
clk => div_reg[0].CLK
clk => div_reg[1].CLK
clk => div_reg[2].CLK
clk => div_reg[3].CLK
clk => div_reg[4].CLK
clk => div_reg[5].CLK
clk => div_reg[6].CLK
clk => div_reg[7].CLK
clk => div_reg[8].CLK
clk => div_reg[9].CLK
clk => div_reg[10].CLK
clk => div_reg[11].CLK
clk => div_reg[12].CLK
clk => div_reg[13].CLK
clk => div_reg[14].CLK
clk => div_reg[15].CLK
clk => key_entry1.CLK
clk => start_delaycnt.CLK
clk => cnt_delay[0].CLK
clk => cnt_delay[1].CLK
clk => cnt_delay[2].CLK
clk => cnt_delay[3].CLK
clk => cnt_delay[4].CLK
clk => cnt_delay[5].CLK
clk => cnt_delay[6].CLK
clk => cnt_delay[7].CLK
clk => cnt_delay[8].CLK
clk => cnt_delay[9].CLK
clk => cnt_delay[10].CLK
clk => cnt_delay[11].CLK
clk => cnt_delay[12].CLK
clk => cnt_delay[13].CLK
clk => cnt_delay[14].CLK
clk => cnt_delay[15].CLK
clk => cnt_delay[16].CLK
clk => cnt_delay[17].CLK
clk => cnt_delay[18].CLK
clk => cnt_delay[19].CLK
rst => key_entry1.OUTPUTSELECT
rst => clkbaud8x.OUTPUTSELECT
rst => cnt_delay.OUTPUTSELECT
rst => cnt_delay.OUTPUTSELECT
rst => cnt_delay.OUTPUTSELECT
rst => cnt_delay.OUTPUTSELECT
rst => cnt_delay.OUTPUTSELECT
rst => cnt_delay.OUTPUTSELECT
rst => cnt_delay.OUTPUTSELECT
rst => cnt_delay.OUTPUTSELECT
rst => cnt_delay.OUTPUTSELECT
rst => cnt_delay.OUTPUTSELECT
rst => cnt_delay.OUTPUTSELECT
rst => cnt_delay.OUTPUTSELECT
rst => cnt_delay.OUTPUTSELECT
rst => cnt_delay.OUTPUTSELECT
rst => cnt_delay.OUTPUTSELECT
rst => cnt_delay.OUTPUTSELECT
rst => cnt_delay.OUTPUTSELECT
rst => cnt_delay.OUTPUTSELECT
rst => cnt_delay.OUTPUTSELECT
rst => cnt_delay.OUTPUTSELECT
rst => start_delaycnt.OUTPUTSELECT
rst => key_entry2.ACLR
rst => send_state[0].ACLR
rst => send_state[1].ACLR
rst => send_state[2].ACLR
rst => state_tras[0].ACLR
rst => state_tras[1].ACLR
rst => state_tras[2].ACLR
rst => state_tras[3].ACLR
rst => txd_buf[0].ACLR
rst => txd_buf[1].ACLR
rst => txd_buf[2].ACLR
rst => txd_buf[3].ACLR
rst => txd_buf[4].ACLR
rst => txd_buf[5].ACLR
rst => txd_buf[6].ACLR
rst => txd_buf[7].ACLR
rst => trasstart.ACLR
rst => txd_reg.PRESET
rst => div_reg.OUTPUTSELECT
rst => div_reg.OUTPUTSELECT
rst => div_reg.OUTPUTSELECT
rst => div_reg.OUTPUTSELECT
rst => div_reg.OUTPUTSELECT
rst => div_reg.OUTPUTSELECT
rst => div_reg.OUTPUTSELECT
rst => div_reg.OUTPUTSELECT
rst => div_reg.OUTPUTSELECT
rst => div_reg.OUTPUTSELECT
rst => div_reg.OUTPUTSELECT
rst => div_reg.OUTPUTSELECT
rst => div_reg.OUTPUTSELECT
rst => div_reg.OUTPUTSELECT
rst => div_reg.OUTPUTSELECT
rst => div_reg.OUTPUTSELECT
rst => div8_rec_reg[0].ACLR
rst => div8_rec_reg[1].ACLR
rst => div8_rec_reg[2].ACLR
rst => div8_tras_reg[0].ACLR
rst => div8_tras_reg[1].ACLR
rst => div8_tras_reg[2].ACLR
rst => recstart_tmp.ACLR
rst => recstart.ACLR
rst => state_rec[0].ACLR
rst => state_rec[1].ACLR
rst => state_rec[2].ACLR
rst => state_rec[3].ACLR
rst => rxd_buf[0].ACLR
rst => rxd_buf[1].ACLR
rst => rxd_buf[2].ACLR
rst => rxd_buf[3].ACLR
rst => rxd_buf[4].ACLR
rst => rxd_buf[5].ACLR
rst => rxd_buf[6].ACLR
rst => rxd_buf[7].ACLR
rst => rxd_reg2.ACLR
rst => rxd_reg1.ACLR
rxd => rxd_reg1.DATAIN
key_input => key_entry1.OUTPUTSELECT
key_input => always0.IN1


