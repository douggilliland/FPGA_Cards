// Copyright (C) 1991-2010 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// *****************************************************************************
// This file contains a Verilog test bench template that is freely editable to  
// suit user's needs .Comments are provided in each section to help the user    
// fill out necessary details.                                                  
// *****************************************************************************
// Generated on "06/09/2011 17:10:18"
                                                                                
// Verilog Test Bench template for design : VGA
// 
// Simulation tool : ModelSim-Altera (Verilog)
// 

`timescale 1 ns/ 1 ps
module VGA_vlg_tst();
// constants                                           
// general purpose registers
reg eachvec;
// test vector input registers
reg GCLKP2;
reg RESET;
// wires                                               
wire B;
wire G;
wire HS;
wire R;
wire VS;

// assign statements (if any)                          
VGA i1 (
// port map - connection between master ports and signals/registers   
	.B(B),
	.G(G),
	.GCLKP2(GCLKP2),
	.HS(HS),
	.R(R),
	.RESET(RESET),
	.VS(VS)
);
initial                                                
begin                                                  
GCLKP2=1'b0;
forever 
#10 GCLKP2=~GCLKP2;                    
end                                                    
initial
RESET=1'b0;
#100
RESET=1'b1;

end                                        
endmodule

