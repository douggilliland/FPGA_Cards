--lpm_decode CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Cyclone V" LPM_DECODES=16 LPM_WIDTH=4 data enable eq
--VERSION_BEGIN 15.1 cbx_cycloneii 2015:10:21:18:09:23:SJ cbx_lpm_add_sub 2015:10:21:18:09:23:SJ cbx_lpm_compare 2015:10:21:18:09:23:SJ cbx_lpm_decode 2015:10:21:18:09:23:SJ cbx_mgl 2015:10:21:18:12:49:SJ cbx_nadder 2015:10:21:18:09:23:SJ cbx_stratix 2015:10:21:18:09:23:SJ cbx_stratixii 2015:10:21:18:09:23:SJ  VERSION_END


-- Copyright (C) 1991-2015 Altera Corporation. All rights reserved.
--  Your use of Altera Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Altera Program License 
--  Subscription Agreement, the Altera Quartus Prime License Agreement,
--  the Altera MegaCore Function License Agreement, or other 
--  applicable license agreement, including, without limitation, 
--  that your use is for the sole purpose of programming logic 
--  devices manufactured by Altera and sold by Altera or its 
--  authorized distributors.  Please refer to the applicable 
--  agreement for further details.



--synthesis_resources = lut 18 
SUBDESIGN decode_tma
( 
	data[3..0]	:	input;
	enable	:	input;
	eq[15..0]	:	output;
) 
VARIABLE 
	data_wire[3..0]	: WIRE;
	enable_wire	: WIRE;
	eq_node[15..0]	: WIRE;
	eq_wire[15..0]	: WIRE;
	w_anode27938w[1..0]	: WIRE;
	w_anode27947w[3..0]	: WIRE;
	w_anode27964w[3..0]	: WIRE;
	w_anode27974w[3..0]	: WIRE;
	w_anode27984w[3..0]	: WIRE;
	w_anode27994w[3..0]	: WIRE;
	w_anode28004w[3..0]	: WIRE;
	w_anode28014w[3..0]	: WIRE;
	w_anode28024w[3..0]	: WIRE;
	w_anode28036w[1..0]	: WIRE;
	w_anode28043w[3..0]	: WIRE;
	w_anode28054w[3..0]	: WIRE;
	w_anode28064w[3..0]	: WIRE;
	w_anode28074w[3..0]	: WIRE;
	w_anode28084w[3..0]	: WIRE;
	w_anode28094w[3..0]	: WIRE;
	w_anode28104w[3..0]	: WIRE;
	w_anode28114w[3..0]	: WIRE;
	w_data27936w[2..0]	: WIRE;

BEGIN 
	data_wire[] = data[];
	enable_wire = enable;
	eq[] = eq_node[];
	eq_node[15..0] = eq_wire[15..0];
	eq_wire[] = ( ( w_anode28114w[3..3], w_anode28104w[3..3], w_anode28094w[3..3], w_anode28084w[3..3], w_anode28074w[3..3], w_anode28064w[3..3], w_anode28054w[3..3], w_anode28043w[3..3]), ( w_anode28024w[3..3], w_anode28014w[3..3], w_anode28004w[3..3], w_anode27994w[3..3], w_anode27984w[3..3], w_anode27974w[3..3], w_anode27964w[3..3], w_anode27947w[3..3]));
	w_anode27938w[] = ( (w_anode27938w[0..0] & (! data_wire[3..3])), enable_wire);
	w_anode27947w[] = ( (w_anode27947w[2..2] & (! w_data27936w[2..2])), (w_anode27947w[1..1] & (! w_data27936w[1..1])), (w_anode27947w[0..0] & (! w_data27936w[0..0])), w_anode27938w[1..1]);
	w_anode27964w[] = ( (w_anode27964w[2..2] & (! w_data27936w[2..2])), (w_anode27964w[1..1] & (! w_data27936w[1..1])), (w_anode27964w[0..0] & w_data27936w[0..0]), w_anode27938w[1..1]);
	w_anode27974w[] = ( (w_anode27974w[2..2] & (! w_data27936w[2..2])), (w_anode27974w[1..1] & w_data27936w[1..1]), (w_anode27974w[0..0] & (! w_data27936w[0..0])), w_anode27938w[1..1]);
	w_anode27984w[] = ( (w_anode27984w[2..2] & (! w_data27936w[2..2])), (w_anode27984w[1..1] & w_data27936w[1..1]), (w_anode27984w[0..0] & w_data27936w[0..0]), w_anode27938w[1..1]);
	w_anode27994w[] = ( (w_anode27994w[2..2] & w_data27936w[2..2]), (w_anode27994w[1..1] & (! w_data27936w[1..1])), (w_anode27994w[0..0] & (! w_data27936w[0..0])), w_anode27938w[1..1]);
	w_anode28004w[] = ( (w_anode28004w[2..2] & w_data27936w[2..2]), (w_anode28004w[1..1] & (! w_data27936w[1..1])), (w_anode28004w[0..0] & w_data27936w[0..0]), w_anode27938w[1..1]);
	w_anode28014w[] = ( (w_anode28014w[2..2] & w_data27936w[2..2]), (w_anode28014w[1..1] & w_data27936w[1..1]), (w_anode28014w[0..0] & (! w_data27936w[0..0])), w_anode27938w[1..1]);
	w_anode28024w[] = ( (w_anode28024w[2..2] & w_data27936w[2..2]), (w_anode28024w[1..1] & w_data27936w[1..1]), (w_anode28024w[0..0] & w_data27936w[0..0]), w_anode27938w[1..1]);
	w_anode28036w[] = ( (w_anode28036w[0..0] & data_wire[3..3]), enable_wire);
	w_anode28043w[] = ( (w_anode28043w[2..2] & (! w_data27936w[2..2])), (w_anode28043w[1..1] & (! w_data27936w[1..1])), (w_anode28043w[0..0] & (! w_data27936w[0..0])), w_anode28036w[1..1]);
	w_anode28054w[] = ( (w_anode28054w[2..2] & (! w_data27936w[2..2])), (w_anode28054w[1..1] & (! w_data27936w[1..1])), (w_anode28054w[0..0] & w_data27936w[0..0]), w_anode28036w[1..1]);
	w_anode28064w[] = ( (w_anode28064w[2..2] & (! w_data27936w[2..2])), (w_anode28064w[1..1] & w_data27936w[1..1]), (w_anode28064w[0..0] & (! w_data27936w[0..0])), w_anode28036w[1..1]);
	w_anode28074w[] = ( (w_anode28074w[2..2] & (! w_data27936w[2..2])), (w_anode28074w[1..1] & w_data27936w[1..1]), (w_anode28074w[0..0] & w_data27936w[0..0]), w_anode28036w[1..1]);
	w_anode28084w[] = ( (w_anode28084w[2..2] & w_data27936w[2..2]), (w_anode28084w[1..1] & (! w_data27936w[1..1])), (w_anode28084w[0..0] & (! w_data27936w[0..0])), w_anode28036w[1..1]);
	w_anode28094w[] = ( (w_anode28094w[2..2] & w_data27936w[2..2]), (w_anode28094w[1..1] & (! w_data27936w[1..1])), (w_anode28094w[0..0] & w_data27936w[0..0]), w_anode28036w[1..1]);
	w_anode28104w[] = ( (w_anode28104w[2..2] & w_data27936w[2..2]), (w_anode28104w[1..1] & w_data27936w[1..1]), (w_anode28104w[0..0] & (! w_data27936w[0..0])), w_anode28036w[1..1]);
	w_anode28114w[] = ( (w_anode28114w[2..2] & w_data27936w[2..2]), (w_anode28114w[1..1] & w_data27936w[1..1]), (w_anode28114w[0..0] & w_data27936w[0..0]), w_anode28036w[1..1]);
	w_data27936w[2..0] = data_wire[2..0];
END;
--VALID FILE
